name: n64-build
on:
  push:
  pull_request:

permissions:
  contents: read
  packages: read

jobs:
  build:
    runs-on: ubuntu-latest

    # Run ALL steps inside the libdragon toolchain container
    container:
      image: ghcr.io/dragonminded/libdragon:latest

    # Default shell = bash
    defaults:
      run:
        shell: bash

    env:
      N64_INST: /opt/libdragon
      PATH: /opt/libdragon/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Mark workspace as safe for Git
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Parse revision tokens from commit message
        id: revs
        run: |
          set -e
          COMMIT_MSG="$(git log -1 --pretty=%B | tr '\n' ' ')"
          MFREV=$(grep -oE 'MF[0-9]{3}' <<<"$COMMIT_MSG" | tail -n1 | sed 's/MF//') || true
          BLREV=$(grep -oE 'BL[0-9]{3}' <<<"$COMMIT_MSG" | tail -n1 | sed 's/BL//') || true
          MCREV=$(grep -oE 'MC[0-9]{3}' <<<"$COMMIT_MSG" | tail -n1 | sed 's/MC//') || true
          MFREV=${MFREV:-000}; BLREV=${BLREV:-000}; MCREV=${MCREV:-000}
          SHORT_SHA="${GITHUB_SHA::7}"
          echo "Commit message: $COMMIT_MSG"
          echo "Revisions parsed: MF=$MFREV BL=$BLREV MC=$MCREV SHA=$SHORT_SHA"
          echo "MFREV=$MFREV" >> $GITHUB_OUTPUT
          echo "BLREV=$BLREV" >> $GITHUB_OUTPUT
          echo "MCREV=$MCREV" >> $GITHUB_OUTPUT
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_OUTPUT

      - name: Toolchain diagnostics (non-fatal)
        continue-on-error: true
        run: |
          set +e
          echo "=== which mips64-elf-gcc ==="; command -v mips64-elf-gcc || true
          echo "=== mips64-elf-gcc --version ==="; mips64-elf-gcc --version | head -n 1 || true
          echo "=== which n64tool ==="; command -v n64tool || true
          echo "=== which n64elfcompress ==="; command -v n64elfcompress || true
          echo "=== ls /opt/libdragon ==="; ls -l /opt/libdragon || true
          echo "=== ls /opt/libdragon/mips64-elf/include ==="; ls -l /opt/libdragon/mips64-elf/include | head -n 5 || true

      - name: Show Makefile paths
        run: |
          make -n showpaths >/dev/null 2>&1 && { echo '--- Makefile paths ---'; make showpaths; echo '----------------------'; } || true

      - name: Build (always log; stamp ROM title)
        run: |
          set -e
          export TITLE="SR MF${{ steps.revs.outputs.MFREV }} MC${{ steps.revs.outputs.MCREV }}"
          # Force PATH-discovered tools through the Makefile's override vars
          CC="$(command -v mips64-elf-gcc)"
          N64TOOL="$(command -v n64tool)"
          ELFCOMPRESS="$(command -v n64elfcompress)"
          echo "Using: CC=$CC  N64TOOL=$N64TOOL  ELFCOMPRESS=$ELFCOMPRESS"
          ( make clean all CC="$CC" N64TOOL="$N64TOOL" ELFCOMPRESS="$ELFCOMPRESS" TITLE="$TITLE" ) 2>&1 | tee build.log || true

          echo "Built files (post-build):"
          ls -l shattered_realms.* romfs.dfs || true
          if [ -f shattered_realms.z64 ]; then
            echo "ROM header (16 bytes):"
            xxd -l 16 -g 1 shattered_realms.z64 || true
          fi

      - name: Upload artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: n64-build-output-MF${{ steps.revs.outputs.MFREV }}-BL${{ steps.revs.outputs.BLREV }}-MC${{ steps.revs.outputs.MCREV }}-${{ steps.revs.outputs.SHORT_SHA }}
          path: |
            build.log
            shattered_realms.z64
            shattered_realms.elf
            shattered_realms.bin
            romfs.dfs
          if-no-files-found: warn
