name: n64-build
on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Pull libdragon toolchain image
        run: docker pull ghcr.io/dragonminded/libdragon:latest

      - name: Build (inside container) + stamp revs
        id: build
        shell: bash
        run: |
          set -e
          COMMIT_MSG="$(git log -1 --pretty=%B | tr '\n' ' ')"
          # Extract your per-file revs from the commit subject (fallbacks = 000)
          # Expected patterns anywhere in the message: MF### for Makefile, BL### for build.yml, MC### for main.c
          MFREV=$(grep -oE 'MF[0-9]{3}' <<<"$COMMIT_MSG" | tail -n1 | sed 's/MF//') || true
          BLREV=$(grep -oE 'BL[0-9]{3}' <<<"$COMMIT_MSG" | tail -n1 | sed 's/BL//') || true
          MCREV=$(grep -oE 'MC[0-9]{3}' <<<"$COMMIT_MSG" | tail -n1 | sed 's/MC//') || true
          MFREV=${MFREV:-000}; BLREV=${BLREV:-000}; MCREV=${MCREV:-000}
          SHORT_SHA="${GITHUB_SHA::7}"

          echo "Commit message: $COMMIT_MSG"
          echo "Revisions: MF=$MFREV BL=$BLREV MC=$MCREV SHA=$SHORT_SHA"

          # Export for later steps
          echo "MFREV=$MFREV" >> $GITHUB_OUTPUT
          echo "BLREV=$BLREV" >> $GITHUB_OUTPUT
          echo "MCREV=$MCREV" >> $GITHUB_OUTPUT
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_OUTPUT

          docker run --rm -v "$PWD":/work -w /work ghcr.io/dragonminded/libdragon:latest bash -lc '
            set -e
            export N64_INST=/opt/libdragon
            export PATH="$N64_INST/bin:$PATH"

            # Pass a short ROM title that fits the 20-char header, eg: "SR MF079 MC030"
            TITLE="SR MF'${MFREV}' MC'${MCREV}'" \
            make -n showpaths >/dev/null 2>&1 && { echo "--- Makefile paths ---"; make showpaths; echo "----------------------"; } || true

            TITLE="SR MF'${MFREV}' MC'${MCREV}'" \
            make clean all 2>&1 | tee build.log || true

            echo "Built files:"
            ls -l shattered_realms.* romfs.dfs || true

            if [ -f shattered_realms.z64 ]; then
              echo "ROM header (16 bytes):"
              xxd -l 16 -g 1 shattered_realms.z64 || true
            fi
          '

      - name: Upload build artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: n64-build-output-MF${{ steps.build.outputs.MFREV }}-BL${{ steps.build.outputs.BLREV }}-MC${{ steps.build.outputs.MCREV }}-${{ steps.build.outputs.SHORT_SHA }}
          path: |
            build.log
            shattered_realms.z64
            shattered_realms.elf
            shattered_realms.bin
            romfs.dfs
          if-no-files-found: warn
