name: Build ROM (stable converter)

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      N64_INST: /opt/libdragon
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install prerequisites
        shell: bash
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y build-essential git curl jq xxd

      - name: Install MIPS64 toolchain (.deb)
        shell: bash
        run: |
          set -e
          API="https://api.github.com/repos/DragonMinded/libdragon/releases/tags/toolchain-continuous-prerelease"
          DEB_URL=$(curl -fsSL "$API" \
            | jq -r '.assets[] | select(.name | test("gcc-toolchain-mips64-.*amd64\\.deb$")) | .browser_download_url' \
            | head -n1)
          [ -n "$DEB_URL" ] || { echo "Could not find toolchain .deb" >&2; exit 1; }
          curl -fsSL "$DEB_URL" -o /tmp/n64-toolchain.deb
          sudo dpkg -i /tmp/n64-toolchain.deb

          # Ensure canonical tool dir on PATH
          sudo mkdir -p "$N64_INST/bin"
          echo "$N64_INST/bin" >> "$GITHUB_PATH"
          export PATH="$N64_INST/bin:$PATH"

          # Idempotent linking for common tools (skip if already same target)
          link_tool () {
            local name="$1"; local dest="$N64_INST/bin/$name"; local found=""
            if command -v "$name" >/dev/null 2>&1; then
              found="$(command -v "$name")"
            else
              for d in "$N64_INST/bin" /n64_toolchain/bin /usr/local/bin /usr/bin; do
                [ -x "$d/$name" ] && { found="$d/$name"; break; }
                if compgen -G "$d/${name}-*" > /dev/null; then
                  found="$(ls -1 "$d/${name}-*" | head -n1)"; break
                fi
              done
            fi
            [ -n "$found" ] || { echo "WARN: $name not found"; return 0; }
            [ "$found" = "$dest" ] && { echo "$name already at $dest"; return 0; }
            if [ -e "$dest" ]; then
              dest_real="$(readlink -f "$dest" || true)"
              src_real="$(readlink -f "$found" || true)"
              [ -n "$dest_real" ] && [ "$dest_real" = "$src_real" ] && { echo "$name already set"; return 0; }
            fi
            echo "Linking $dest -> $found"
            sudo ln -sfn "$found" "$dest"
          }
          for t in mips64-elf-gcc mips64-elf-g++ mips64-elf-ar mips64-elf-ld mips64-elf-objcopy mips64-elf-objdump mips64-elf-ranlib mips64-elf-strip mips64-elf-nm; do
            link_tool "$t"
          done

      - name: Build & install libdragon (trunk)
        shell: bash
        run: |
          set -e
          export PATH="$N64_INST/bin:$PATH"
          rm -rf /tmp/libdragon
          git clone --depth=1 https://github.com/DragonMinded/libdragon.git /tmp/libdragon
          make -C /tmp/libdragon -j"$(nproc)" N64_INST="$N64_INST"
          sudo make -C /tmp/libdragon install N64_INST="$N64_INST"
          test -f "$N64_INST/mips64-elf/lib/n64.ld"
          test -f "$N64_INST/mips64-elf/include/libdragon.h"

      - name: Build & install libdragon tools (trunk) + ensure n64elf2bin
        shell: bash
        run: |
          set -e
          export PATH="$N64_INST/bin:$PATH"

          # Build all tools from trunk
          make -C /tmp/libdragon -j"$(nproc)" tools

          # Helper to copy a tool from the built tree, wherever it lives
          copy_tool () {
            local name="$1"
            local found
            found=$(find /tmp/libdragon/tools -type f -name "$name" -perm -111 | head -n1 || true)
            [ -n "$found" ] && sudo install -m 0755 "$found" "$N64_INST/bin/$name"
          }
          copy_tool n64tool
          copy_tool mkdfs
          copy_tool n64elfcompress
          copy_tool n64elf2bin   # may not exist on some snapshots
          copy_tool n64elf2rom   # older name; we’ll normalize next

          # Normalize any converter to n64elf2bin
          if ! command -v n64elf2bin >/dev/null 2>&1; then
            if command -v n64elf2rom >/dev/null 2>&1; then
              sudo ln -sfn "$(command -v n64elf2rom)" "$N64_INST/bin/n64elf2bin"
            fi
          fi

          # If still missing, fetch preview tools just for n64elf2bin and build it
          if ! command -v n64elf2bin >/dev/null 2>&1; then
            echo "n64elf2bin missing; building from preview branch tools…"
            rm -rf /tmp/libdragon_preview
            git clone --depth=1 -b preview https://github.com/DragonMinded/libdragon.git /tmp/libdragon_preview
            make -C /tmp/libdragon_preview/tools -j"$(nproc)"
            found=$(find /tmp/libdragon_preview/tools -type f -name "n64elf2bin" -perm -111 | head -n1 || true)
            [ -n "$found" ] && sudo install -m 0755 "$found" "$N64_INST/bin/n64elf2bin"
          fi

          echo "Tools on PATH now:"
          command -v n64tool        || true
          command -v mkdfs          || true
          command -v n64elfcompress || true
          command -v n64elf2bin     || true

      - name: Build ROM
        shell: bash
        run: |
          set -e
          export PATH="$N64_INST/bin:$PATH"
          make distclean || true
          make showpaths || true
          make all 2>&1 | tee build.log

          echo "Built files:"
          ls -l shattered_realms.* romfs.dfs || true
          if [ -f shattered_realms.z64 ]; then
            echo "ROM header:"
            xxd -l 16 -g 1 shattered_realms.z64
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: shattered_realms
          path: |
            shattered_realms.z64
            shattered_realms.elf
            shattered_realms.bin64
            romfs.dfs
            build.log
          if-no-files-found: error
