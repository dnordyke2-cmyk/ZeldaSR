name: Build ROM (Finalized Libdragon Path Fix)

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      N64_INST: /home/runner/.local/libdragon

    steps:
      - uses: actions/checkout@v4

      - name: Cache toolchain & libdragon
        id: cache-libdragon
        uses: actions/cache@v4
        with:
          path: |
            /home/runner/.local/libdragon/tools
            /home/runner/.local/libdragon/include
            /home/runner/.local/libdragon/lib
          key: n64-finalcache-v2-${{ runner.os }}

      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git wget python3 unzip texinfo bison flex

      - name: Build toolchain if missing
        shell: bash
        run: |
          set -e
          if ! find /home/runner/.local/libdragon/tools -type f -name "mips64-elf-gcc" -print -quit | grep -q .; then
            mkdir -p /home/runner/.local
            git clone --depth=1 https://github.com/DragonMinded/libdragon.git /home/runner/.local/libdragon
            cd /home/runner/.local/libdragon/tools
            export N64_INST=/home/runner/.local/libdragon
            ./build-toolchain.sh || true
            cd /home/runner/.local/libdragon
            make install || true
          fi

      - name: Locate built toolchain
        shell: bash
        run: |
          echo "Searching recursively for compiler binaries..."
          find /home/runner/.local/libdragon/tools -type f -name "mips64-elf-gcc" || true

      - name: Build ROM
        shell: bash
        run: |
          set -e
          # Look up compiler directory dynamically
          COMP_PATH=$(find /home/runner/.local/libdragon/tools -type f -name "mips64-elf-gcc" -printf '%h\n' | head -n1)
          echo "Detected compiler path: ${COMP_PATH}"
          export PATH="${COMP_PATH}:$PATH"
          export N64_INST=/home/runner/.local/libdragon
          command -v mips64-elf-gcc || (echo "Compiler still not found!" && exit 1)
          make clean all 2>&1 | tee build.log

      - name: Upload ROM artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: shattered_realms-rom
          path: |
            *.z64
            romfs.dfs

      - name: Upload Debug Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: shattered_realms-debug
          path: |
            src/*.o
            *.elf
            Makefile
            build.log
