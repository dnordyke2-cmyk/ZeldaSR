name: Build ZeldaSR with embedded IPL3

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      N64_INST: /opt/libdragon
      PATH: /opt/libdragon/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install prerequisites
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y \
            build-essential git python3 pkg-config libpng-dev zlib1g-dev \
            jq curl xxd

      - name: Install mips64-elf toolchain (arch-aware)
        run: |
          set -e
          ARCH="$(dpkg --print-architecture)"
          API="https://api.github.com/repos/DragonMinded/libdragon/releases/tags/toolchain-continuous-prerelease"
          ASSETS_JSON="$(curl -fsSL "$API")"
          case "$ARCH" in
            amd64) PATTERN='(x86_64|amd64)\.deb$' ;;
            arm64) PATTERN='(aarch64|arm64)\.deb$' ;;
            *) echo "Unsupported arch: $ARCH"; echo "$ASSETS_JSON" | jq -r '.assets[].name'; exit 1 ;;
          esac
          DEB_URL="$(echo "$ASSETS_JSON" | jq -r --arg re "$PATTERN" '.assets[] | select(.name | test($re)) | .browser_download_url' | head -n1)"
          [ -n "$DEB_URL" ] || { echo "No toolchain .deb matched $PATTERN"; exit 1; }
          curl -fsSL "$DEB_URL" -o /tmp/n64-toolchain.deb
          sudo dpkg -i /tmp/n64-toolchain.deb || true
          command -v mips64-elf-gcc || { echo "mips64-elf-gcc not in PATH"; exit 1; }

      - name: Build & install libdragon (headers, libs, tools)
        run: |
          set -e
          git clone --depth=1 https://github.com/DragonMinded/libdragon.git /tmp/libdragon
          pushd /tmp/libdragon
          ./build.sh
          popd
          command -v n64tool || { echo "n64tool missing after build.sh"; exit 1; }
          command -v mkdfs   || { echo "mkdfs missing after build.sh"; exit 1; }

      - name: Rebuild n64tool with embedded IPL3 and require --ipl3 support
        run: |
          set -e
          pushd /tmp/libdragon/tools
          make clean || true
          make n64tool
          # Find and install freshly built n64tool
          N64TOOL_BIN="$(find . -maxdepth 3 -type f -name n64tool -perm -111 | head -n1 || true)"
          [ -n "$N64TOOL_BIN" ] || { echo "Built n64tool not found"; exit 1; }
          sudo install -m 0755 "$N64TOOL_BIN" /opt/libdragon/bin/n64tool
          popd

          echo "n64tool located at: $(command -v n64tool)"
          n64tool --help | head -80 || true
          # Must expose --ipl3
          if ! n64tool --help 2>/dev/null | grep -q -- '--ipl3'; then
            echo "ERROR: n64tool lacks --ipl3; cannot embed known-good IPL3."
            exit 1
          fi
          echo "OK: n64tool supports --ipl3"

      - name: Build ROM
        run: |
          set -e
          echo "--- Makefile paths ---"
          make showpaths
          echo "----------------------"
          make distclean
          make all 2>&1 | tee build.log
          echo "First 16 bytes of ROM:"
          xxd -l 16 -g 1 shattered_realms.z64 || true
          echo "ROM size (bytes):"
          wc -c < shattered_realms.z64 || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zeldasr_embedded_ipl3
          path: |
            shattered_realms.z64
            shattered_realms.elf
            romfs.dfs
            build.log
          if-no-files-found: error
